<!DOCTYPE html>
<html lang="zh-TW">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>智能股市分析系統</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --bg-dark: #0F0F1E;
            --bg-medium: #1A1B3A;
            --bg-light: #2A2B5A;
            --bg-card: #252647;
            --text-light: #E8E9F3;
            --text-dim: #A8A9C3;
            --accent: #6C63FF;
            --success: #4ADE80;
            --error: #EF4444;
            --warning: #FBBF24;
            --gain: #10B981;
            --loss: #F43F5E;
        }

        body {
            font-family: 'Microsoft JhengHei UI', sans-serif;
            background: var(--bg-dark);
            color: var(--text-light);
            min-height: 100vh;
        }

        .container {
            max-width: 1600px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            text-align: center;
            margin-bottom: 30px;
            padding: 30px;
            background: var(--bg-card);
            border-radius: 15px;
            border: 1px solid var(--bg-light);
        }

        .header h1 {
            font-size: 2.5rem;
            background: linear-gradient(135deg, var(--accent), #8B80FF);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 10px;
        }

        .info-cards {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .info-card {
            background: var(--bg-card);
            border: 1px solid var(--bg-light);
            border-radius: 12px;
            padding: 20px;
            text-align: center;
        }

        .info-card-title {
            font-size: 0.9rem;
            color: var(--text-dim);
            margin-bottom: 10px;
        }

        .info-card-value {
            font-size: 1.8rem;
            font-weight: bold;
        }

        .control-panel {
            background: var(--bg-card);
            border-radius: 12px;
            padding: 25px;
            margin-bottom: 30px;
        }

        .control-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            align-items: end;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
        }

        .form-control {
            width: 100%;
            background: var(--bg-medium);
            border: 2px solid var(--bg-light);
            border-radius: 8px;
            padding: 10px;
            color: var(--text-light);
        }

        .btn {
            background: linear-gradient(135deg, var(--accent), #8B80FF);
            color: white;
            border: none;
            border-radius: 8px;
            padding: 12px 20px;
            font-weight: bold;
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(108, 99, 255, 0.3);
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }

        .content-section {
            background: var(--bg-card);
            border-radius: 12px;
            padding: 25px;
        }

        .table-container {
            max-height: 500px;
            overflow-y: auto;
            border-radius: 8px;
            border: 1px solid var(--bg-light);
        }

        .data-table {
            width: 100%;
            border-collapse: collapse;
            background: var(--bg-medium);
        }

        .data-table th {
            background: var(--bg-light);
            padding: 12px 8px;
            text-align: left;
            font-weight: bold;
            position: sticky;
            top: 0;
        }

        .data-table td {
            padding: 10px 8px;
            border-bottom: 1px solid var(--bg-light);
        }

        .return-positive { color: var(--gain); font-weight: bold; }
        .return-negative { color: var(--loss); font-weight: bold; }

        .chart-container {
            height: 400px;
            position: relative;
        }

        .status-bar {
            background: var(--bg-card);
            border-radius: 8px;
            padding: 15px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 20px;
        }

        .loading {
            text-align: center;
            padding: 40px;
        }

        .spinner {
            width: 40px;
            height: 40px;
            border: 4px solid var(--bg-light);
            border-top: 4px solid var(--accent);
            border-radius: 50%;
            animation: spin 1s linear infinite;
            margin: 0 auto 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @media (max-width: 1200px) {
            .main-content { grid-template-columns: 1fr; }
        }

        @media (max-width: 768px) {
            .control-grid { grid-template-columns: 1fr; }
            .info-cards { grid-template-columns: repeat(2, 1fr); }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>智能股市分析系統</h1>
            <p>📊 報酬率光譜分析儀 v2.0</p>
        </div>

        <div class="info-cards">
            <div class="info-card">
                <div class="info-card-title">總分析股票數</div>
                <div class="info-card-value" id="totalStocks" style="color: var(--accent);">0</div>
            </div>
            <div class="info-card">
                <div class="info-card-title">平均報酬率</div>
                <div class="info-card-value" id="avgReturn" style="color: var(--warning);">0.00%</div>
            </div>
            <div class="info-card">
                <div class="info-card-title">最高漲幅</div>
                <div class="info-card-value" id="topGainer" style="color: var(--gain);">0.00%</div>
            </div>
            <div class="info-card">
                <div class="info-card-title">最大跌幅</div>
                <div class="info-card-value" id="topLoser" style="color: var(--loss);">0.00%</div>
            </div>
        </div>

        <div class="control-panel">
            <h3 style="color: var(--accent); margin-bottom: 20px;">📋 查詢控制面板</h3>
            <div class="control-grid">
                <div class="form-group">
                    <label>📈 頻率選擇</label>
                    <select id="frequency" class="form-control">
                        <option value="daily">日報酬</option>
                        <option value="weekly">週報酬</option>
                        <option value="monthly">月報酬</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>📅 開始日期</label>
                    <input type="date" id="startDate" class="form-control">
                </div>
                <div class="form-group">
                    <label>📅 結束日期</label>
                    <input type="date" id="endDate" class="form-control">
                </div>
                <div class="form-group">
                    <label>📊 顯示筆數</label>
                    <select id="topN" class="form-control">
                        <option value="20">20 筆</option>
                        <option value="50" selected>50 筆</option>
                    </select>
                </div>
                <div class="form-group">
                    <label>&nbsp;</label>
                    <button id="refreshBtn" class="btn">🔄 執行分析</button>
                </div>
            </div>
        </div>

        <div class="main-content">
            <div class="content-section">
                <h3 style="color: var(--accent); margin-bottom: 20px;">📈 股票報酬率排行榜</h3>
                <div class="table-container">
                    <table class="data-table">
                        <thead>
                            <tr>
                                <th>排名</th>
                                <th>代碼</th>
                                <th>名稱</th>
                                <th>報酬率(%)</th>
                                <th>平均(%)</th>
                            </tr>
                        </thead>
                        <tbody id="dataTableBody">
                            <tr><td colspan="5" style="text-align: center; padding: 40px;">點擊「執行分析」開始</td></tr>
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="content-section">
                <h3 style="color: var(--accent); margin-bottom: 20px;">📊 視覺化圖表</h3>
                <div class="chart-container">
                    <canvas id="analysisChart"></canvas>
                </div>
            </div>
        </div>

        <div class="status-bar">
            <div id="statusMessage" style="color: var(--success);">⚡ 系統就緒</div>
            <div id="lastUpdate" style="color: var(--text-dim);">最後更新: --</div>
        </div>
    </div>

    <script>
        let currentData = [];
        let currentChart = null;

        document.addEventListener('DOMContentLoaded', function() {
            setDefaultDates();
            document.getElementById('refreshBtn').addEventListener('click', executeAnalysis);
        });

        function setDefaultDates() {
            const today = new Date();
            const oneMonthAgo = new Date(today.getFullYear(), today.getMonth() - 1, today.getDate());
            document.getElementById('endDate').value = today.toISOString().split('T')[0];
            document.getElementById('startDate').value = oneMonthAgo.toISOString().split('T')[0];
        }

        async function executeAnalysis() {
            updateStatus('⏳ 正在分析...', 'var(--warning)');
            const btn = document.getElementById('refreshBtn');
            btn.disabled = true;
            btn.innerHTML = '<div class="spinner" style="width: 20px; height: 20px; border-width: 2px; display: inline-block;"></div> 分析中...';

            try {
                await new Promise(resolve => setTimeout(resolve, 2000));
                const mockData = generateMockData();
                currentData = mockData;
                
                updateInfoCards(mockData);
                updateTable(mockData);
                updateChart(mockData);
                
                updateStatus('✅ 分析完成', 'var(--success)');
                updateLastUpdateTime();
            } catch (error) {
                updateStatus('❌ 分析失敗', 'var(--error)');
            } finally {
                btn.disabled = false;
                btn.innerHTML = '🔄 執行分析';
            }
        }

        function generateMockData() {
            const stocks = [
                {code: '2330', name: '台積電'}, {code: '2317', name: '鴻海'}, {code: '2454', name: '聯發科'},
                {code: '2881', name: '富邦金'}, {code: '1303', name: '南亞'}, {code: '2382', name: '廣達'},
                {code: '2308', name: '台達電'}, {code: '2886', name: '兆豐金'}, {code: '2357', name: '華碩'},
                {code: '2412', name: '中華電'}, {code: '2303', name: '聯電'}, {code: '3008', name: '大立光'}
            ];

            return stocks.map(stock => ({
                ticker: stock.code,
                name: stock.name,
                latest_return_pct: (Math.random() - 0.5) * 15,
                avg_return_pct: (Math.random() - 0.5) * 8,
                data_points: Math.floor(Math.random() * 30) + 10
            })).sort((a, b) => b.latest_return_pct - a.latest_return_pct);
        }

        function updateInfoCards(data) {
            if (!data.length) return;
            
            const totalStocks = data.length;
            const avgReturn = data.reduce((sum, item) => sum + item.latest_return_pct, 0) / totalStocks;
            const topGainer = Math.max(...data.map(item => item.latest_return_pct));
            const topLoser = Math.min(...data.map(item => item.latest_return_pct));

            document.getElementById('totalStocks').textContent = totalStocks;
            document.getElementById('avgReturn').textContent = avgReturn.toFixed(2) + '%';
            document.getElementById('topGainer').textContent = topGainer.toFixed(2) + '%';
            document.getElementById('topLoser').textContent = topLoser.toFixed(2) + '%';
        }

        function updateTable(data) {
            const tbody = document.getElementById('dataTableBody');
            tbody.innerHTML = '';

            data.forEach((item, index) => {
                const row = document.createElement('tr');
                const returnClass = item.latest_return_pct > 0 ? 'return-positive' : 
                                  item.latest_return_pct < 0 ? 'return-negative' : '';

                row.innerHTML = `
                    <td style="text-align: center; font-weight: bold;">#${index + 1}</td>
                    <td style="font-family: monospace; text-align: center;">${item.ticker}</td>
                    <td>${item.name}</td>
                    <td class="${returnClass}">${item.latest_return_pct.toFixed(2)}%</td>
                    <td class="${returnClass}">${item.avg_return_pct.toFixed(2)}%</td>
                `;
                tbody.appendChild(row);
            });
        }

        function updateChart(data) {
            const ctx = document.getElementById('analysisChart').getContext('2d');
            
            if (currentChart) {
                currentChart.destroy();
            }

            const top10 = data.slice(0, 10);
            const labels = top10.map(item => `${item.ticker} ${item.name}`);
            const values = top10.map(item => item.latest_return_pct);
            const colors = values.map(val => val > 0 ? '#10B981' : '#F43F5E');

            currentChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: '報酬率 (%)',
                        data: values,
                        backgroundColor: colors,
                        borderColor: colors,
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { display: false }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: { color: '#3A3B6A' },
                            ticks: { color: '#A8A9C3' }
                        },
                        x: {
                            grid: { color: '#3A3B6A' },
                            ticks: { 
                                color: '#A8A9C3',
                                maxRotation: 45
                            }
                        }
                    }
                }
            });
        }

        function updateStatus(message, color) {
            const statusElement = document.getElementById('statusMessage');
            statusElement.textContent = message;
            statusElement.style.color = color;
        }

        function updateLastUpdateTime() {
            const now = new Date();
            document.getElementById('lastUpdate').textContent = 
                `最後更新: ${now.toLocaleDateString()} ${now.toLocaleTimeString()}`;
        }
    </script>
</body>
</html>
